<controls:MetroWindow x:Class="WOptiPNG.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:wOptiPng="clr-namespace:WOptiPNG"
        xmlns:cvts="clr-namespace:WOptiPNG.Converters" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        TitleCaps="False"
        Background="#252525"
        Height="600"
        GlowBrush="#FF131313"
        ResizeMode="CanResizeWithGrip"
        NonActiveGlowBrush="{x:Null}"
        Width="800">
    
    <controls:MetroWindow.TitleTemplate>
        <DataTemplate>
            <Label Margin="12 0" Padding="0 4" FontSize="15" Foreground="#838383">WOptiPNG</Label>
        </DataTemplate>
    </controls:MetroWindow.TitleTemplate>
    
    <Control.Resources>
        <Color x:Key="Background">#252525</Color>
        <Color x:Key="DarkGray">#3D3D3D</Color>
        <Color x:Key="LightGray">#585858</Color>
        <Color x:Key="Reimu">#8B0A31</Color>
        <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{StaticResource Background}" />
<!--        <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource Reimu}"/>-->
        <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="White"/>
        <SolidColorBrush x:Key="DarkGrayBrush" Color="{StaticResource DarkGray}"/>
        <SolidColorBrush x:Key="LightGrayBrush" Color="{StaticResource LightGray}"/>
        <SolidColorBrush x:Key="ControlsDisabledBrush" Color="#81807E"/>
        <SolidColorBrush x:Key="HighlightBrush" Color="White"/>
        <cvts:InverseBooleanConverter x:Key="InverseBool" />
        <cvts:StatusToProgressColorConverter x:Key="StatusToProgressColor" />
        <cvts:StatusToProgressIntermediateConverter x:Key="StatusToProgressIntermediate" />
        <cvts:StatusToProgressConverter x:Key="StatusToProgress" />
        <cvts:PercentToStringConverter x:Key="PercentToString" />
        <cvts:SizeHumanizerConverter x:Key="SizeHumanizer" />

        <Style x:Key="RightAlignedTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="TextAlignment" Value="Right" />
        </Style>
        <Style x:Key="RightAlignedColumnHeader" TargetType="{x:Type DataGridColumnHeader}" 
                            BasedOn="{StaticResource MetroDataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Right" />
        </Style>
    </Control.Resources>

    <Grid d:DataContext="{d:DesignInstance Type=wOptiPng:MainViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="466*" />
            <RowDefinition Height="28"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderThickness="0 0 0 5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="118"/>
                    <ColumnDefinition Width="118"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="118"/>
                    <ColumnDefinition Width="118"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid IsEnabled="{Binding IsFolderSelectEnabled}" Margin="0 5" Grid.ColumnSpan="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  />
                        <ColumnDefinition Width="118" />
                    </Grid.ColumnDefinitions>
                    <TextBox Margin="12 2 6 2" Grid.Column="0" 
                                 Text="{Binding OutputDirectory, UpdateSourceTrigger=PropertyChanged}"
                                 controls:TextboxHelper.Watermark="Output directory"
                                 ToolTip="Output directory" />
                    <Button Grid.Column="1" Margin="6 2" Width="100"
                                Command="{Binding SelectDirectoryCommand}">Select</Button>
                </Grid>
                <controls:ToggleSwitch IsChecked="{Binding OverwriteSource}" 
                                       IsEnabled="{Binding InProgress, Converter={StaticResource InverseBool}}"
                                       Grid.Column="3" Grid.Row="0" 
                                       VerticalAlignment="Center"
                                       Header="{x:Null}" Margin="12 8" OnLabel="Overwrite source" 
                                       OffLabel="Output to folder" Grid.ColumnSpan="2" />

                <Button Grid.Column="0" Grid.Row="1" Width="100"
                        Margin="12 5 6 5" IsEnabled="{Binding InProgress, Converter={StaticResource InverseBool}}"
                        Command="{Binding AddFilesCommand}">Add files</Button>
                <Button Grid.Column="1" Grid.Row="1" Width="100"
                        Margin="6 5 12 5" IsEnabled="{Binding InProgress, Converter={StaticResource InverseBool}}"
                        Command="{Binding ClearFilesCommand}">Clear files</Button>
                <Button Grid.Column="4" Grid.Row="1" Margin="6 5 12 5" Width="100"
                        Content="{Binding StartButtonTitle}"
                        ToolTip="{Binding StartButtonTooltip}"
                        IsEnabled="{Binding StartButtonEnabled}" 
                        Command="{Binding StartOrCancelCommand}" />
            </Grid>
        </Border>
        <DataGrid Grid.Row="1"  CanUserSortColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" 
                  AutoGenerateColumns="False" IsReadOnly="True" 
                  ItemsSource="{Binding Files}" HeadersVisibility="Column" BorderThickness="0, 5, 0, 0"
                  VerticalScrollBarVisibility="Auto" 
                  AllowDrop="True"
                  PreviewKeyDown="DataGridPreviewKeyDown" PreviewDrop="DataGridPreviewDrop">
            
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
                    <Style.Setters>
                        <Setter Property="ToolTip" Value="{Binding Log}" />
                        <EventSetter Event="MouseDoubleClick" Handler="HandleFileDoubleClick" />
                        <EventSetter Event="PreviewKeyDown" Handler="IgnoreFileEnterKeyDown" />
                        <EventSetter Event="PreviewKeyUp" Handler="HandleFileEnterKeyUp" />
                    </Style.Setters>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource DarkGrayBrush}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightGrayBrush}"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="Path" Width="100*" Binding="{Binding InputPath}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Margin" Value="12 5"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" 
                               BasedOn="{StaticResource MetroDataGridColumnHeader}">
                            <Setter Property="Padding" Value="12 4 4 7"></Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Size Before" Width="100" 
                                    Binding="{Binding SizeBefore, Converter={StaticResource SizeHumanizer}}"
                                    ElementStyle="{StaticResource RightAlignedTextBlock}"
                                    HeaderStyle="{StaticResource RightAlignedColumnHeader}" />
                <DataGridTextColumn Header="Size After" Width="100" 
                                    Binding="{Binding SizeAfter, Converter={StaticResource SizeHumanizer}}"
                                    ElementStyle="{StaticResource RightAlignedTextBlock}"
                                    HeaderStyle="{StaticResource RightAlignedColumnHeader}" />
                <DataGridTextColumn Header="Reduction" Width="100"
                                    Binding="{Binding ReductionPercent, Converter={StaticResource PercentToString}}"
                                    ElementStyle="{StaticResource RightAlignedTextBlock}"
                                    HeaderStyle="{StaticResource RightAlignedColumnHeader}" />

                <DataGridTemplateColumn Header="Progress" Width="100" IsReadOnly="True">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" 
                               BasedOn="{StaticResource MetroDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Right" />
                            <Setter Property="Padding" Value="0 0 12 4"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:MetroProgressBar Margin="12" Maximum="100"
                                                       IsIndeterminate="{Binding Status, Converter={StaticResource StatusToProgressIntermediate}}" 
                                                       Value="{Binding Status, Converter={StaticResource StatusToProgress}}" 
                                                       Foreground="{Binding Status, Converter={StaticResource StatusToProgressColor}}">
                            </controls:MetroProgressBar>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Label HorizontalAlignment="Right" Grid.Row="2" Margin="15 0" Foreground="DarkGray" Content="{Binding StatusMessage}" />

    </Grid>

    <controls:MetroWindow.WindowCommands>
        <controls:WindowCommands>
            <Button Click="SettingsButtonClick" >settings</Button>
        </controls:WindowCommands>
    </controls:MetroWindow.WindowCommands>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Header="Settings" Position="Right" Width="260" Name="SettingsView">
                <wOptiPng:SettingsView HorizontalAlignment="Left">

                </wOptiPng:SettingsView>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

</controls:MetroWindow>
